# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x
            - name: Restore dependencies
              run: dotnet restore
            - name: Build
              run: dotnet build --no-restore
            - name: Publish Release - Self-contained
              if: success() # chỉ chạy khi các bước trước thành công
              run: dotnet publish ExcelVideoLabeler.API/ExcelVideoLabeler.API.csproj -c Release -r win-x64 -p:SelfContained=true  -o ./publish

            # Dùng upload-artifact và download-artifact để chia sẻ thư mục publish giữa các jobs.
            - name: Upload published app
              uses: actions/upload-artifact@v4
              with:
                  name: published-app # Tên của artifact sau khi tải lên
                  path: ./publish # Đường dẫn tệp/thư mục cần upload
                  retention-days: 1 # Hoặc 1-90 ngày tùy ý

    package:
      runs-on: windows-latest
      needs: build
      steps:
        - uses: actions/checkout@v4
        - name: Download published app
          uses: actions/download-artifact@v4
          with:
            name: published-app # Tên artifact cần tải xuống
            path: ./publish # Đường dẫn lưu trữ artifact sau khi tải xuống, nội dung của published-app sẽ được giải nén vào bên trong publish nếu published-app là thư mục
  
        # Cài đặt Inno Setup Compiler
        - name: Install Inno Setup
          run: choco install innosetup --no-progress -y
  
        # Build file EXE từ file ISS
        - name: Compile Inno Setup script
          run: |
            iscc ./setup/setup.iss
  
        # file output .exe nằm ở /setup/ExcelLabeler.exe
        - name: Upload EXE artifact
          uses: actions/upload-artifact@v4
          with:
            name: ExcelLabeler.exe 
            path: ./setup/ExcelLabeler.exe
# 
    release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        needs: package

        steps:
            #  tải artifact xuống và đưa vào release
            - name: Download exe file
              uses: actions/download-artifact@v4
              with:
                  name: ExcelLabeler.exe # tên của file hoặc thư mục tải lên artifact
                  path: . # đường dẫn lưu ExcelLabeler.exe


            # tao github release
            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token tự động có sẵn
              with:
                  # nếu sử dụng cách xác định tag name này thì cần chỉ định tag và push
                  # git tag v1.0.0
                  # git push origin v1.0.0
                  # tag_name: ${{ github.ref_name }}  # Lấy tên tag (ví dụ: v1.0.0)
                  # release_name: "Release ${{ github.ref_name }}"

                  # không cần chỉ định tag khi push
                  tag_name: 'v1.0.0' # ✅ Đặt tên tag rõ ràng
                  release_name: 'Release v1.0.0'
                  draft: false
                  prerelease: false

            - name: Upload exe to Release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # URL từ bước tạo release
                  asset_path: ./ExcelLabeler.exe
                  asset_name: ExcelLabeler.exe
                  asset_content_type: application/vnd.microsoft.portable-executable
